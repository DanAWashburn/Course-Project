//Import from Google Fonts, two different ones used. See _settings.variables.scss
@import url('https://fonts.googleapis.com/css?family=Electrolize|Farro&display=swap');

html {
  box-sizing: border-box;
}

*,
*:after,
*:before {
  box-sizing: inherit;
}

.main {
  padding: 2rem;
}
//"Title" font used for major headings, such as name of firm
h1 {
  font-size: 400%;
  font-family: $title;
}

h2 {
  font-family: $title;
}
//"Standard" font used for remainder of document
p {
  font-family: $standard;
  font-size: 125%;
}
//Grid for five sections, with some white space on left and right
.grid-wrapper {
  display: grid;
  grid-template-columns: 1fr 1fr 1fr 1fr 1fr 1fr 1fr 1fr 1fr 1fr 1fr 1fr;
  grid-template-rows: 1fr 1fr 1fr 1fr 1fr 1fr 1fr 1fr 1fr 1fr 1fr 1fr;
  color: $darkgrey;
}
//Title of firm area
.grid-item1 {
  grid-area: 1 / 2 / 3 / 12;
  height: 100%;
}
//Links area
.grid-item2 {
  grid-area: 3 / 2 / 5 / 12;
  height: 100%;
}
//Text area
.grid-item3 {
  grid-area: 4 / 2 / 11 / 12;
  height: 100%;
  padding: 15px;
}

//Contact info area
.grid-item5 {
  grid-area: 11 / 2 / 13 / 12;
  height: 100%;
  font-size: 75%;
}
//Sets styling for alost all elements in the grid
.flex-item-standard {
  display: flex;
  flex-direction: column;
  height: 100%;
  justify-content: center;
  align-items: center;
}

.flex-item-main {
  display: flex;
  flex-direction: row;
  height: 100%;
  justify-content: center;
  align-items: center;
}
//Sets styling for content within grid-item2
.flex-item2 {
  display: flex;
  flex-wrap: wrap;
  min-height: 100px;
  justify-content: space-around;
}
//Fits house picture to space
.house {
  max-width: 100%;
  height: auto;
}

//This is a "basic" version of the eventual picture. I felt like I should have been able to put the styling in the .tile class above instead of creating a separate class for it. That didn't work, though.
.basic {
  margin: 25px;
  background-color: red;
  height: 200px;
  line-height: 200px;
  width: 125px;

  color: white;
  text-align: center;
  vertical-align: middle;
  display: flex;
  justify-content: center;
  align-items: center;


  &__one {

  animation: fadeIn 0.75s ease-in;
}

&__two {

  animation: fadeIn 1.25s ease-in;
}

&__three {

  animation: fadeIn 1.75s ease-in;
}
  //NEW: calling mixin for tiles
  // @include standard(); //NEW: Using transition property.
  // //Found cool website: //https://easings.net/en# , using one of its easings
  // transition: transform 400ms cubic-bezier(0.645, 0.045, 0.355, 1);
  //Also found a variety of interesting transitions at https://codepen.io/nazarelen/pen/gbLXYK
}
//NEW: Using variables for colors of boxes

//This fade-in applies to all tiles. There is a very subtle zoom-in effect. I want it to not even be noticed by the casual user. Instead, I want the pictures to have a feeling of lightly pulsing when the page loads.
@keyframes fadeIn {
  from {
    opacity: 0;

  }

  to {
    opacity: 1;

  }
}

.test {
  width: 200px;
  height: 200px;
  background-color: blue;

}


.trigger:hover {
  opacity: 0.3;
}
